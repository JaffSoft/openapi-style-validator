apply plugin: 'application'

dependencies {
	compile project(':lib')
	compile group: 'commons-cli', name: 'commons-cli', version: '1.4'

	compile 'io.swagger.parser.v3:swagger-parser:2.0.14'
	compile 'org.openapitools.empoa:empoa-swagger-core:1.0.0'
}

mainClassName = 'org.openapitools.openapistylevalidator.cli.Main'

apply plugin: 'com.github.johnrengelman.shadow'

shadowJar {
	//noinspection GroovyAccessibility
    archiveBaseName = "openapi-style-validator-cli"
	//noinspection GroovyAccessibility
	archiveClassifier = null
}

project.tasks.assemble.dependsOn project.tasks.shadowJar

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

artifacts {
    archives sourcesJar
    archives javadocJar
	archives shadowJar
}

signing {
    useGpgCmd()
    sign configurations.archives
}

tasks.withType(Sign) {
    onlyIf {
        project.hasProperty('signing.gnupg.keyName')
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'openapi-style-validator-cli'
            pom {
                name = 'OpenAPI Style Validator - cli'
                description = 'Command line interface to validate the style and standards of an OpenAPI specification'
                packaging = 'jar'
                url = 'https://openapitools.github.io/openapi-style-validator/'
                licenses {
                    license {
                        name = 'Apache 2.0 License'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                developers {
                    developer {
                        id = 'JFCote'
                        name = 'Jean-Francois Cote'
                        email = 'jcote@stingray.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/openapitools/openapi-style-validator.git'
                    developerConnection = 'scm:git:https://github.com/openapitools/openapi-style-validator.git'
                    url = 'https://github.com/openapitools/openapi-style-validator/'
                }
            }
            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifact shadowJar

            if(project.hasProperty('signing.gnupg.keyName')) {
                pom.withXml {
                    def pomFile = file("${project.buildDir}/generated-pom.xml")
                    writeTo(pomFile)
                    def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                    artifact(pomAscFile) {
                        classifier = null
                        extension = 'pom.asc'
                    }
                    pomFile.delete()
                }
    
                project.tasks.signArchives.signatureFiles.each {
                    if(it.parentFile.name == 'libs') {   
                        artifact(it) {
                            def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                            if (matcher.find()) {
                                classifier = matcher.group(1)
                            } else {
                                if(it.file.name.startsWith('openapi-style-validator-cli')) {
                                    //this is the shadowJar, use the 'all' classifier:
                                    classifier = 'all'
                                } else {
                                    classifier = null
                                }
                            }
                            extension = 'jar.asc'
                        }
                    }
                }
            }
        }
    }
}